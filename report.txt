Goblin Recursive Function named findPath and is found under the turn method for the Goblin class so its declared in Goblin.h and implemented in Goblin.cpp.

The way the function works is that it creates grid of 15 distance around four points around the Goblin.  One for each direction.
The grids are created recursively according to this sudo code
    if n is greater than 15
        return false
    maze[sr][sc] = current n value

    if square is valid or if square has n value greater than previous square
        call function again
        pathExists(maze, sr,sc+1,er,ec,n+1, dist)
    Repeat above for each of the four directions changing sr and sc accordingly

    dist = ending locations n value

The rooms generation is pretty simple, first there is a square class that has a center, width, and height.  Than a random number of squares are created
with random values for their center, width, and height.  Than function fills the grid with # except when the point is within any of the squares.
Lastly to connect the squares the center is used so the center that is smaller will get a line from their row to the larger ones row
and another line from the new point from the smaller ones col to the larger ones col.  This creates a hallway between centers.

Errors
While the Goblin generally moves accurately, it sometimes bugs out a wont follow the player despite being the correct distance away.
